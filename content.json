{"meta":{"title":"浅梦未央のBLOG","subtitle":"啦啦啦啦啦","description":null,"author":"Sunshine","url":"https://zhihui.gold","root":"/"},"pages":[{"title":"404 Not Found","date":"2020-03-26T13:06:06.529Z","updated":"2020-03-26T13:06:06.529Z","comments":true,"path":"404.html","permalink":"https://zhihui.gold/404.html","excerpt":"","text":"###&nbsp;404 Not Found&nbsp;### 很抱歉，您访问的页面不存在 可能是输入地址有误或该地址已被删除"},{"title":"私について","date":"2020-03-20T04:22:18.000Z","updated":"2020-03-25T15:35:27.397Z","comments":true,"path":"about/index.html","permalink":"https://zhihui.gold/about/index.html","excerpt":"","text":"五山禅院自动化科学与工程学院在读 喜欢高达、战斗番、治愈(?)番 特别喜欢爱的战士的代表作品魔法少女小圆(?) 机器人、机器视觉、神经网络调参师、一名搬砖菜菜菜鸡 擅长Python、C++、JAVA编程、略略略懂ROS 嘤雄联盟贼菜，手太残玩个没操作的辅助还是把把1-20，于是乎只能玩单机 最近沉迷Ori、Subnautica、Tomb Raider、Euro Truck Simulator 2嘻嘻 喜欢写点编程知识、linux操作常识、游戏动漫推荐、偶尔还会记录一下菜谱(?) 略略略略略略略略略略略"},{"title":"留言板","date":"2020-03-26T11:22:54.220Z","updated":"2020-03-26T11:22:54.220Z","comments":true,"path":"message/index.html","permalink":"https://zhihui.gold/message/index.html","excerpt":"","text":"不一定会有人看得到的留言板 欢迎问问题，灌水，吐槽，大家一起交流啊"},{"title":"文章标签","date":"2019-03-13T07:32:03.000Z","updated":"2020-03-22T08:57:05.147Z","comments":true,"path":"tags/index.html","permalink":"https://zhihui.gold/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Ubuntu系统备份方式记录","slug":"backup-method-for-ubuntu","date":"2020-04-03T16:25:26.000Z","updated":"2020-04-03T16:32:47.165Z","comments":true,"path":"archives/d58ae5e.html","link":"","permalink":"https://zhihui.gold/archives/d58ae5e.html","excerpt":"传说中的“有备无患”","text":"传说中的“有备无患” 先秦·左丘明《左传·襄公十一年》：“《书》曰：“居安思危。思则有备，有备则无患。” 在使用Ubuntu系统的过程中，由于系统的可定制性太高，以至于在使用系统的过程中容易对系统造成一些损坏或者错误的设置(?)。在遇到一些无法修复的系统问题时，往往会选择重装系统，可是重装系统以后，所有的软件、系统设置、美化设置全部都要重新来一遍 不想重装系统的话，还有一种办法就是对系统进行备份，经常性地对系统进行备份也可以避免重装系统后重新做系统的所有设置 分清楚硬盘分区情况在对分区进行备份之前，首先我们要搞清楚Ubuntu备份的操作做了什么 Linux系统的特点是不对文件和目录(文件夹)进行区分，文件是文件，目录也是文件，所以我们可以对整个分区进行压缩打包，打包成一个独立的文件存放在硬盘上的某个地方，在需要还原的时候再见这个压缩包解压覆盖到相对应的分区位置即可 因为这种备份操作的特性，所以我们需要先搞清楚自己硬盘的分区情况，对每个分区进行独立的备份 在安装Ubuntu系统的时候，所有用户都会经过分区的操作，此时系统会决定哪些目录会占用独立的分区，我们首先要通过各种方法拿到这种分区划分 通过任务管理器查看这是最直接最快捷的方法，适用于一切用户，即使你完全不会使用终端命令 在应用中心打开系统监视器，切换到File Systems，即可查看所有挂载的文件分区 举个例子，上图是作者机器上的系统监视器给出的信息，从中我们可以看出作者的机器上一共挂载3种分区 系统引导分区 分区类型是vfat，在Windows下是fat32 Linux分区 分区类型是ext2/ext3/ext4，在Windows下一般不可见(笑 其他数据分区 分区类型是fuseblk，在Windows下是ntfs 我们需要备份的是几个在Windows下不可见的Linux分区，在这个例子中也就是 / 根分区，挂在位置在sda7 /boot 启动分区，挂载位置在sda6 /home 主分区，挂载位置在sdc5 通过系统自带的硬盘工具查看当然了，条条大路通罗马，除了使用系统监视器以外，我们也可以使用Ubuntu系统自带的硬盘工具查看分区情况；不过这个工具隐藏的位置比较深入，在应用中心中有一个Utilities文件夹，在这个文件夹中可以找到Disk工具 从作者机器上这个工具的截图看，当前选中的分区位于第一块硬盘（sda，一块240G的固态硬盘）的末尾，分区挂载在dev/sda7，以根分区文件系统的形式挂载(Filesystem Root) 这个工具给出的信息比较多，当然对新手也更不友好，不过毕竟是图形界面，到处看看还是能看出点门道来的 通过fstab文件查看在Ubuntu系统中，如果想要开机自动挂载某个分区，则需要在fstab文件中写出该分区在硬盘上的位置、想要挂载到的位置，挂载形式，开机是否进行自动检查等参数，Linux分区的挂载同样需要这个文件，我们可以通过这个文件看出我们所需要的信息 在终端中输入 1复制gedit /etc/fstab fstab文件属于系统文件，需要超级用户权限才能修改，如果需要修改，需要在命令前面添加sudo前缀临时获得权限 1复制sudo gedit /etc/fstab 警示！！！不建议在没有备份的情况下修改fstab文件的内容，Ubuntu系统在开机时如果挂载到了错误的分区，会直接进入Recovery模式，无法正常开机，需要修改成正确的fstab文件才能开机 备份fstab文件 1复制sudo cp /etc/fstab /etc/fstab.back fstab文件内容如下 从fstab文件中我们可以得到与系统监视器一样的结论，不过开机后再挂载的移动设备不会包含在fstab文件中 使用终端命令查看最后一种方法，怎么能少得了万能的命令行呢，只给图形界面的操作方法，你瞧谁不起呢！ 在Ubuntu终端中查看分区信息有多少种方法，这里只介绍最常用的一种，使用fdisk命令查看 1复制sudo fdisk -l 命令行会输出一大堆信息，其中会有我们所需要的信息 123456789101112131415161718192021222324252627282930313233343536373839404142复制Disk /dev/sda: 223.6 GiB, 240057409536 bytes, 468862128 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisklabel type: gptDisk identifier: 0F20B151-2873-439C-845D-E38042C81A30Device Start End Sectors Size Type/dev/sda1 2048 1023999 1021952 499M Windows recovery environment/dev/sda2 1024000 1228799 204800 100M EFI System/dev/sda3 1228800 1261567 32768 16M Microsoft reserved/dev/sda4 1261568 247818695 246557128 117.6G Microsoft basic data/dev/sda5 247818696 249571327 1752632 855.8M Windows recovery environment/dev/sda6 249571328 253571071 3999744 1.9G Linux filesystem/dev/sda7 253571072 468860927 215289856 102.7G Linux filesystemDisk /dev/sdb: 3.7 TiB, 4000787030016 bytes, 7814037168 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 4096 bytes / 33553920 bytesDisklabel type: gptDisk identifier: 0CFA0E31-5858-9090-8081-828310111213Device Start End Sectors Size Type/dev/sdb1 2048 7814031231 7814029184 3.7T Microsoft basic dataDisk /dev/sdc: 931.5 GiB, 1000204886016 bytes, 1953525168 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 4096 bytesI/O size (minimum/optimal): 4096 bytes / 4096 bytesDisklabel type: gptDisk identifier: 0C5204A1-5858-9090-8081-828310111213Device Start End Sectors Size Type/dev/sdc1 252268696 1075230519 822961824 392.4G Microsoft basic data/dev/sdc2 1075230520 1411679744 336449225 160.4G Microsoft basic data/dev/sdc3 1411679808 1726328840 314649033 150G Microsoft basic data/dev/sdc4 1726328904 1953519137 227190234 108.3G Microsoft basic data/dev/sdc5 2048 236267519 236265472 112.7G Linux filesystem/dev/sdc6 236267520 252268543 16001024 7.6G Linux swap 我们只需要看type是Linux filesystem的分区即可，通过上面的信息和分区大小的匹配，可以得出与系统监视器相同的结论 通过条条大路到达罗马后，我们可以得出结论，需要备份的Linux分区有以下三个 / 根分区，挂在位置在sda7，大小是45.0GB /boot 启动分区，挂载位置在sda6，大小是125.5MB /home 主分区，挂载位置在sdc5，大小是42.4GB 打包命令的使用在Ubuntu下，可使用tar命令对文件和目录创建打包档案。利用这一命令，可以为某一个文件创建档案，也可以将一大堆文件和目录全部打包成一个文件，用户也随时可以向档案中增添或删减文件，这对于档案的储存和管理是非常有用的 可能有细心的读者会发现这其中有一些细微的差别：tar命令只是打包操作，打包操作是不包含压缩这个选项的。没错，打包和压缩是文件管理中分立的两个概念 打包是将一堆文件和目录变成一个总的文件 压缩是将一个大文件通过压缩算法变成一个小文件 为什么要区分这两个概念呢，这源于Linux下的很多压缩程序并不具备打包的功能，他们只能操作单独的文件，所以如果要进行压缩打包，要先使用tar指令打包，再使用gzip或gzip2指令进行压缩 tar命令的使用 1复制tar [required para][optional para][files or directory] 参数含义 必要参数(required para) -A 新增压缩文件到已存在的压缩-B 设置区块大小-c 建立新的压缩文件-d 记录文件的差别-r 加文件到已经压缩的文件-u 添加改变了和现有的文件到已经存在的压缩文件-x 从压缩的文件中提取文件-t 显示压缩文件的内容-z 使用gzip压缩文件，减少占用空间-j 使用bzip2压缩文件，减少占用空间-Z 支持compress解压文件-v 显示操作过程-l 文件系统边界设置-k 保留原有文件不覆盖-m 保留文件不被覆盖-W 确认压缩文件的正确性-p 用原来的文件权限还原文件 可选参数(optional para) -b 设置区块数目-C 切换到指定目录-f 指定压缩文件(带路径)，只能作为最后一个参数—help 显示帮助信息—version 显示版本信息—exclude 排除指定目录，不进行备份 进行备份前准备备份前需要对系统进行必要的瘦身，因为我们是备份整个系统，所以备份一些不必要的内容会增加空间占用 删除旧版本软件缓存 1复制sudo apt-get autoclean 清除所有软件缓存 1复制sudo apt-get clean 清除系统中不再使用的孤立软件(慎用，有可能会将一些依赖删除) 1复制sudo apt-get autoremove 开始备份准备工作的最后一步，我们需要寻找一个合适的备份介质，首先这个介质需要有足够大的剩余空间，能够放下整个分区的文件；其次这个位置需要比较安全，而且重装系统的过程中不能被覆盖 建议放在大容量的机械硬盘分区里面或者外置的储存设备，作者使用的就是由机械硬盘盒和台式机机械硬盘组成的外置储存设备 首先 打开终端(笑 1复制Ctrl+Shift+T 切换到root用户，避免权限问题 1复制su root 如果是第一次使用root用户的话，需要先设置root账户密码 1复制sudo passwd root 根据提示设置密码并确认密码后，可以登陆root账户 再切换到 / 根目录 1复制cd / 备份系统命令，此处以备份 / 分区为例 1复制tar cpzf /media/sunshine/0CFB19510CFB1951/Backup/ubuntu_backup/ubuntu_back_20200309_2031.tgz --exclude=/proc --exclude=-lost+found --exclude=/media --exclude=/mnt --exclude=/home --exclude=/boot --exclude=run --exclude=tmp / 分析一下这个命令 第一部分1复制tar cpz tar命令和必要参数 c 新建一个备份文档p 保存权限，并应用到所有文件z 使用gzip压缩备份文档，减少占用空间 第二部分1复制f /media/sunshine/0CFB19510CFB1951/Backup/ubuntu_backup/ubuntu_root_backup@`date +%Y-%m-%d`.tgz 可选参数和指定备份文件的目的路径 f 指定压缩包名称，只能做最后一个参数，后面接文件路径 文件路径填你的目的路径和压缩包文件名，注意文件后缀是.tgz 为了区分不同备份版本，在这条命令中还使用date +%Y-%m-%d命令，调用系统时间作为备份文件的一部分 在3月31日使用该命令时，最终的备份文件名字为ubuntu_root_backup@2020-03-31.tgz 第三部分1复制--exclude=/proc --exclude=/lost+found --exclude=/media --exclude=/mnt --exclude=/tmp --exclude=/run --exclude=/home --exclude=/boot 这里就是使用--exclude参数排除不想备份的文件夹，下面详细说明一下建议排除的文件夹以及他们的作用 /proc 虚拟文件系统，系统运行的每一个进程都会自动在这个目录下面创建一个进程目录。既然是系统自动创建，也就没必要备份的必要了/lost+found 系统发生错误时（比如非法关机），可以在这里找回一些丢失文件/media 多媒体挂载点，像u盘、移动硬盘、机械硬盘上的其他数据分区等都会默认挂载到这个目录下，当然了，用户也可能会自定/mnt 临时挂载点，你可以自己挂载一些文件系统到这里/tmp 临时文件夹，系统的一些临时文件会放在这里/run 系统从启动以来产生的一些信息文件/boot 和系统启动相关的文件，像grub相关文件都放在这里，这个目录很重要/home 用户主目录，存放用户个人文件和应用程序 第四部分1复制/ 这是你希望备份的目录，在这个例子中是根分区 一些提示 以下是几点提示，这几点比较重要，如果忽视则可能导致一些奇怪的错误发生，或是达不到我们需要的备份效果 /mmt目录需要排除在外。如果不把/mnt目录排除在外，挂载在/mnt目录上的其他分区也会被备份 /media目录需要排除在外。如果不把/media目录排除在外，挂载在/media目录上的其他分区，比如外置的存储设备也会被备份 任何挂载其他存储设备的目录都需要被排除在外。举例来说，作者的Ubuntu系统中，来自机械硬盘的ntfs数据分区会在开机时自动以fuseblk格式挂载到/home/用户名/Media/中，所以在备份/home目录时，需要排除/Meia目录，否则会将里面挂载的整个机械硬盘的数据备份一遍 切记要排除备份的目的文件本身所在的目录。如上面的例子中，备份文件ubuntu_root_backup@2020-03-31.tgz所在的目录一定要排除，否则会变成我备份我自己，可能会得到一些超出常理的备份结果，嘻嘻 还原系统备份完之后，万一有一天系统崩溃了，我们需要恢复系统，这时可以通过Ubuntu系统的安装U盘(Lived USB)进入try Ubuntu模式 tar还原只能覆盖原有存在的文件，即增量还原的概念 假设备份系统时计算机中有1234这四个文件 需要还原系统时，计算机中的文件状态已经变成12345678`，文件4由于一些原因发生了改变，新增了文件5678 此时若直接使用tar覆盖还原的方式，则计算机中的文件会变为12345678,文件4`被备份存档中的文件4替代，文件5678保留 当然这种情况对于日常使用的文档文件是没有问题的，如果仅对于文档备份则当然可以这么做，但对于包含程序包的备份存档，则会因为依赖变化等问题出现一些错误，所以不建议大家在系统备份中使用覆盖还原 切换到root用户，找到旧Ubuntu系统的根分区所在分区，一般来说，可以在Ubuntu系统的/media目录下面找到，使用rm -rf指令删除整个分区中的文件。 1复制sudo rm -rf /media/磁盘名称/分区名称 先创建一个临时目录用于挂载原系统的文件系统 1复制mkdir -p /mnt/origin/sys 将原系统文件系统挂载到临时目录 1复制mount /dev/分区 /mnt/origin/sys 在临时目录中解压备份档案 1复制tar -xvpzf /media/myDisk/ubuntu_root_backup@xxxx.tar.gz -C /mnt/sys 解压完成后，记得要将备份时使用--exclude指令排除在外的目录重新创建，否则重启系统后会遇到错误 12复制cd /mnt/sysmkdir proc lost+found media mnt run tmp 其中，/home目录和/boot目录在这个例子中由于是在另外的分区，删除时不会被覆盖，所以我们也不需要重新创建这两个目录 警示！！！如果在恢复系统的过程中，您修改了硬盘的分区，，各个分区的UUID发生了改变，那么重启系统前一定要根据各个分区的信息重新修改/etc/fstab文件，否则不能开机 总结系统的备份和还原操作对应于每个人的计算机状况不同，受限于分区情况、存储介质挂载情况、使用习惯不相同等差异，有很多种不同的方式方法和解决方案，切不可因循守旧，墨守成规，要根据自身的情况灵活判断和改变","categories":[],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://zhihui.gold/tags/Linux/"},{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://zhihui.gold/tags/Ubuntu/"},{"name":"备份","slug":"备份","permalink":"https://zhihui.gold/tags/备份/"},{"name":"系统维护","slug":"系统维护","permalink":"https://zhihui.gold/tags/系统维护/"}]},{"title":"Ubuntu常用命令总结之二：系统信息、磁盘操作、用户权限操作、压缩操作","slug":"useful-command-collect-for-ubuntu_2","date":"2020-03-21T10:32:29.000Z","updated":"2020-03-26T12:22:02.118Z","comments":true,"path":"archives/9ca8d389.html","link":"","permalink":"https://zhihui.gold/archives/9ca8d389.html","excerpt":"养兵千日&nbsp;&nbsp;用兵一时","text":"养兵千日&nbsp;&nbsp;用兵一时 在使用Ubuntu系统的过程中，经常需要使用一些系统命令，Linux系发行版的最大特点也是在使用这些系统的时候，适当使用一些命令可以极大地增加使用这类系统的效率，这也是开发人员们偏爱使用这类系统的一大原因 对于Linux系发行版，理论上可以在终端使用命令，代替在图形界面中所做的一切操作，有道是，“UI能做的Terminal能做，UI不能做的Terminal一样能做”。先将日常使用中常用到的命令总结记录下来，以便日后查阅使用。第二篇中包含的大多数命令，就是用图形界面不能做到的事情了 显示系统信息显示处理器架构使用arch命令显示机器的处理器架构 1arch 若机器为32位系统，则输出为x86，若为64位系统，则输出为x86_64 arch命令的输出是通过uname命令调取的，是ustname结构中@machine的值 1234567struct utsname &#123; char sysname[]; // Operating system name (e.g., &quot;Linux&quot;) 内核名称 char nodename[]; // Name within &quot;some implementation-defined network&quot; 网络节点上的主机名 char release[]; // Operating system release (e.g., &quot;2.6.28&quot;) 内核发行号 char version[]; // Operating system version 内核版本 char machine[]; // Hardware identifier 主机的硬件架构名称 &#125; 显示系统信息使用uname命令显示系统信息 1uname [options] [--help] [--version] 参数含义 -a&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;显示全部的信息-m&nbsp;&nbsp;&nbsp;&nbsp;显示电脑类型-n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;显示在网络上的主机名称-r&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;显示操作系统的发行编号-s&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;显示操作系统名称-v&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;显示操作系统版本--help&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;显示帮助--version&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;显示版本信息 显示系统信息1uname -a 显示操作系统的发行编号 1uname -r 显示操作系统版本 1uname -v 显示uname帮助 1uname --help 查看所有硬件信息使用dmidecode命令输出系统中所有硬件的信息，需要添加sudo前缀提供权限 1sudo dmidecode 使用此命令不仅可以得到当前机器上的配置，也可以得到系统支持的最大配置。这条命令参数极多，使用不同后缀可以查询不同的硬件信息，详情倾自行搜索尝试 文件输出命令使用cat命令链接文件内容并将其输出到标准输出设备，类似于type命令 1cat file 可以使用cat命令链接系统中的所有文件并显示其内容，常用于查看一些文件信息 显示cpuinfo文件的信息 1cat /proc/cpuinfo 显示系统中的中断 1cat /proc/interrupts 显示内存使用信息 1cat /proc/meninfo 显示网络适配器及统计 1cat /proc/net/dev 显示已加载的文件系统 1cat /proc/mounts 显示系统中PCI总线设备使用lspci命令列举系统中的PCI总线设备 12lspcilspci -tv 终端会输出系统中的PCI/PCI-E总线设备 显示系统中USB总线设备使用lsusb命令列举系统中的USB总线设备 12lsusblsusb -tv 终端会输出系统中的USB总线设备 显示系统日期使用date命令显示当前系统日期时间(UTC时间) 1date 显示日历使用cal命令显示日历，在终端中就可以显示与图形界面相仿的日历信息 1cal [year] 显示year的日历表 1cal 2020 设置系统时间使用date命令设置系统日期和时间 1date [month][date][hour][minute][year].[second] 设置系统时间为2020年3月21日17:00:00 1date 032117002020.00 保存系统时间使用clock命令保存系统时间修改到BIOS 1clock -w 系统关机、重启、运行等级关闭系统命令使用shutdown命令关闭系统 1shutdown [-t seconds] [-rkhncfF] time [message] 参数含义 -t seconds&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;设定在t秒后关闭系统-r&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关机后重新开机-k&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;并不会真的关机，只是将警告讯息传送给所有使用者-h&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关机后停机-n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;不采用正常程序来关机，用强迫的方式杀掉所有执行中的程序后自行关机-c&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;取消目前已经进行中的关机动作。-f&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关机时，不做 fsck 动作(检查 Linux 文件系统)-F&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关机时，强迫进行 fsck 动作time&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;设定关机的时间，单位为分钟message&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;传送给所有使用者的警告讯息 示例 立即关闭系统 1shutdown -h now 10分钟后关机，并向使用者发出提醒 1shutdown -h +5 “The System will shutdown after 5 minutes” 在20:35重启计算机 1shutdown -r 20:35 取消当前正在计时的关机任务 1shutdown -c 退出当前账号使用logout命令退出当前账号，需要在root账户下操作 1logout 重启使用reboot命令重启系统 1reboot [-n] [-w] [-d] [-f] [-i] 参数含义-n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在重开机前不做将记忆体资料写回硬盘的动作-w&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;并不会真的重开机，只是把记录写到/var/log/wtmp档案里-d&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;不把记录写到 /var/log/wtmp 档案里（-n这个参数包含了-d）-f&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;强迫重开机，不呼叫 shutdown 这个指令-i&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在重开机之前先把所有网络相关的装置先停止 系统运行等级使用init命令调整系统运行等级(run level) 1init [mode] 参数含义0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;停机1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;单用户模式2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;多用户模式，没有NFS且无网络连接3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;完全多用户模式，命令行模式(标准系统运行等级)4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;不可用5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;图形化界面模式6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;重新启动s&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;单用户模式，不配置网络和后台进程 关闭系统，shutdown命令就是运用了这个机制 1init 0 重启系统，reboot命令就是运用了这个机制 1init 6 通过修改系统的initdefault属性(对应于不同的发行版这个属性有不同的名字，Ubuntu18中已经这个名称已经修改)，可以修改系统的默认启动属性。 警示！无论何时都不能将initdefault设置为1或者6，这会将系统启动时的默认run level改变，导致系统不停关机或重启 系统运行等级之二使用telinit命令调整系统运行等级(run level)，命令格式和init相同 telinit命令是init命令的软连接，用户程序通过telinit修改run level (作者这么写的目的就是为了让用户多写3个字符吗) 由于init进程是PID=1的进程，是所有进程的老祖宗，推测是为了系统安全和稳定性 文件挂载卸载文件或驱动器挂载使用mount命令挂载Linux系统外的文件，在系统目录下操作可能需要添加sudo前缀提供权限 1234mount [-hV]mount -a [-fFnrsvw] [-t vfstype]mount [-fnrsvw] [-o options [,...]] device | dirmount [-fnrsvw] [-t vfstype] [-o options] device dir 参数含义 -V&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;显示程序版本-h&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;显示辅助讯息 -v&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;显示较讯息，通常和 -f 用来除错-a&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;将 /etc/fstab 中定义的所有档案系统挂上-F&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这个命令通常和 -a 一起使用，它会为每一个 mount 的动作产生一个行程负责执行。在系统需要挂上大量 NFS 档案系统时可以加快挂上的动作-f&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;通常用在除错的用途。它会使 mount 并不执行实际挂上的动作，而是模拟整个挂上的过程。通常会和 -v 一起使用-n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;一般而言，mount 在挂上后会在 /etc/mtab 中写入一笔资料。但在系统中没有可写入档案系统存在的情况下可以用这个选项取消这个动作-s-r&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;等于 -o ro-w&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;等于 -o rw-L&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;将含有特定标签的硬盘分割挂上-U&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;将档案分割序号为 的档案系统挂下。-L 和 -U 必须在/proc/partition 这种档案存在时才有意义-t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;指定档案系统的型态，通常不必指定。mount 会自动选择正确的型态 -o async&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;打开非同步模式，所有的档案读写动作都会用非同步模式执行-o sync&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在同步模式下执行-o atime、-o noatime&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当 atime 打开时，系统会在每次读取档案时更新档案的『上一次调用时间』。当我们使用 flash 档案系统时可能会选项把这个选项关闭以减少写入的次数-o auto、-o noauto&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;打开/关闭自动挂上模式-o defaults&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;使用预设的选项 rw, suid, dev, exec, auto, nouser, and async-o dev、-o nodev、-o exec、-o noexec&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;允许执行档被执行-o suid、-o nosuid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;允许执行档在 root 权限下执行-o user、-o nouser&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;使用者可以执行 mount/umount 的动作-o remount&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;将一个已经挂下的档案系统重新用不同的方式挂上。例如原先是唯读的系统，现在用可读写的模式重新挂上-o ro&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;用唯读模式挂上-o rw&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;用可读写模式挂上-o loop=&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;使用 loop 模式用来将一个档案当成硬盘分割挂上系统 示例 将/dev/hda1挂载/mnt目录下 1mount /dev/hda1 /mnt 将/dev/hda1用只读模式挂载在/mut目录下 1mount -o ro /dev/hda1 /mnt 将AAA.iso的image文档使用loop模式挂载在/mmt/AAA文件夹下，这条命令在使用软件ISO安装包时非常好用 1mount -o loop AAA.iso /mnt/AAA 驱动器卸载使用umount命令卸载目前挂载在系统中的文件系统 1umount [-ahnrvV][-t &lt;文件系统类型&gt;][文件系统] 参数含义-a&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;卸除/etc/mtab中记录的所有文件系统-h&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;显示帮助-n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;卸除时不要将信息存入/etc/mtab文件中-r&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;若无法成功卸除，则尝试以只读的方式重新挂入文件系统-v&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;执行时显示详细的信息-V&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;显示版本信息-t&lt;文件系统类型&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;仅卸除选项中所指定的文件系统[文件系统]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;除了直接指定文件系统外，也可以用设备名称或挂入点来表示文件系统 示例 通过设备名和挂载点卸载文件系统，同时输出详细信息 12umount -v /dev/sda1 //通过设备名卸载umount -v /mnt/AAA //通过挂载点卸载 如果设备正忙，卸载则会失败，这个问题的常见原因是，某个打开的shell当前目录为挂载点中的某个目录 运行卸载操作而不写入/etc/mtab文件- 当文件为只读或当磁盘写满时非常有用 1umount -n /mnt/sda1 强制驱动器卸载(解除占用)使用fuser命令找出占用某个文件、驱动器、TCP、UDP、端口号的进程，并可以结束进程，借出对象的占用 1fuser [options] [paras] 参数含义-a&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;显示命令行中指定的所有文件-k&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;杀死访问指定文件的所有进程-i&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;杀死进程前需要用户进行确认-l&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;列出所有已知信号名-m&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;指定一个被加载的文件系统或一个被加载的块设备-n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;选择不同的名称空间-u&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在每个进程后显示所属的用户名 paras&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;被占用的对象，可以是文件、驱动器、TCP、UDP、端口号等 列出使用/etc/passwd文件的本地进程的进程号1fuser /etc/passwd 列出使用/etc/filesystems文件的进程的进程号和用户登录名 1fuser -u /etc/filesystems 终止使用给定文件系统的所有进程 1fuser -k -x -u -c /dev/hd1 or fuser -kxuc /home 在驱动器繁忙时强制卸载驱动器，并清除所有占用此驱动器的进程 1fuser -km /mnt/sda1 分区错误检查检查修复文件系统错误在Linux系统关机过程中，系统会对文件系统进行检查，若出现问题则系统不能正常关闭。使用fsck命令检查并尝试修复文件系统中的错误，此外，不应该使用fsck命令检查已挂载的磁盘，可能对磁盘造成永久的伤害，在检查之前建议卸载磁盘 1fsck [options] [para] 参数含义 -a&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;自动修复文件系统，不询问任何问题-A&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;依照/etc/fstab配置文件的内容，检查文件内所列的全部文件系统-N&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;不执行指令，仅列出实际执行会进行的动作-P&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当搭配”-A”参数使用时，则会同时检查所有的文件系统-r&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;采用互动模式，在执行修复时询问问题，让用户得以确认并决定处理方式-R&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当搭配”-A”参数使用时，则会略过/目录的文件系统不予检查-s&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;依序执行检查作业，而非同时执行-T&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;执行fsck指令时，不显示标题信息-V&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;显示指令执行过程-t [文件系统类型]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;指定要检查的文件系统类型，若在 /etc/fstab 中已有定义或 kernel 本身已支援的则不需加上此参数 另外，在运行 fsck 时，可能出错并返回一些错误码。下面是一些常见的错误及其意义 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;没有错误1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;修复了一些文件系统错误2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;系统需要被重启4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;文件系统错误未被修复8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;操作错16&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;使用或语法错32&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fsck 被用户取消128&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;共享库出错 对单个目录进行错误检查并进行自动修复，-a也可用-y代替 1fsck -a /dev/sda1 仅检查文件系统错误，不进行修复 1fsck -n /dev/sda1 检查所有分区上的所有文件错误 12fsck -Afsck -AR //禁止对根文件目录进行检查 只检查指定文件系统类型分区 12fsck -t ext4 /dev/sda1 //检查ext4类型的sda1分区fsck -t -A ext4 //检查所有ext4类型的所有分区 只在卸载的磁盘上进行磁盘错误检查 1fsck -AM","categories":[],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://zhihui.gold/tags/Linux/"},{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://zhihui.gold/tags/Ubuntu/"},{"name":"学习","slug":"学习","permalink":"https://zhihui.gold/tags/学习/"},{"name":"备份","slug":"备份","permalink":"https://zhihui.gold/tags/备份/"}]},{"title":"Ubuntu常用命令总结之一：终端设置、部分系统命令、文件操作、目录操作","slug":"useful-command-collect-for-ubuntu_1","date":"2020-03-07T01:35:46.000Z","updated":"2020-03-26T12:15:35.821Z","comments":true,"path":"archives/c77b8e4a.html","link":"","permalink":"https://zhihui.gold/archives/c77b8e4a.html","excerpt":"会者不难&nbsp;&nbsp;难者不会&nbsp;&nbsp;常用则熟&nbsp;&nbsp;少用则疏","text":"会者不难&nbsp;&nbsp;难者不会&nbsp;&nbsp;常用则熟&nbsp;&nbsp;少用则疏 在使用Ubuntu系统的过程中，经常需要使用一些系统命令，Linux系发行版的最大特点也是在使用这些系统的时候，适当使用一些命令可以极大地增加使用这类系统的效率，这也是开发人员们偏爱使用这类系统的一大原因 对于Linux系发行版，理论上可以在终端使用命令，代替在图形界面中所做的一切操作，有道是，“UI能做的Terminal能做，UI不能做的Terminal一样能做”。先将日常使用中常用到的命令总结记录下来，以便日后查阅使用 终端设置默认打开的终端对大部分的发行版来说，例如Ubuntu、Manjaro、Linux Mint等，进入终端的快捷键都是Ctrl+Shift+T，此时打开的终端的默认操作目录是/home/用户名目录。从下图可以看到，在直接打开的命令行下，默认操作目录是/home/sunshine 在特定位置打开的终端有时候，我们需要快速打开一个在当前操作目录的终端，此时可以在系统自带的文件管理器中打开该文件夹，右键列表中会有“在命令行中打开”选项，通过这个选项打开的命令行的默认操作目录则会在当前目录下。 终端设置选择“Edit”-“Preferences”可打开终端设置界面，在此处可以设置终端主题，颜色背景、所使用的字体、终端大小，终端的缓冲区大小等设置，自行探索即可 常用命令系统命令软件包更新更新软件列表1sudo apt-get update 根据软件列表下载并安装软件包1sudo apt-get upgrade 这两条命令往往一起使用，作为Ubuntu更新的命令，第一条命令的作用是与Ubuntu的软件列表镜像服务器同步，根据当前系统安装的软件列表检查是否有版本更新以及依赖变化，将变化的软件列表同步到本地；第二条命令根据第一条命令的软件列表，从服务器上拉取安装包并自动安装 在软件依赖发生变化时，有时会出现依赖错误的问题，或是由于网络通信问题，缺少一些安装包，此时需要输入命令补全，一般需要输入这条命令时，命令行的输出都会给出提示1sudo apt-get upgrade fix-missing 补全当我们在输入一些长文件名或命令时，手动输入比较麻烦而且可能出错，此时可以输入一部分，按TAB键进行补全，命令行会自动补全到没有重复的最后部分，若有多个项目的前面部分相同，按多次TAB可显示出全部的候选项可供选择 显示文件目录高级属性使用lsattr命令显示文件属性，在系统目录下操作可能需要添加sudo前缀提供权限 1lsattr [options] files or directory 参数属性 -a&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;显示所有文件和目录，包括以”.”为名称开头字符的额外内建，现行目录”.”与上层目录”..”-d&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;显示，目录名称，而非其内容-l&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;此参数目前没有任何作用-R&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;递归处理，将指定目录下的所有文件及子目录一并处理-v&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;显示文件或目录版本-V&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;显示版本信息 改变文件目录高级属性查看文件高级属性后，可以使用chattr命令改变文件属性，在系统目录下操作可能需要添加sudo前缀提供权限 1chattr [-RV][-v&lt;版本编号&gt;][+/-/=&lt;属性&gt;][文件或目录...] 参数含义-R&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;递归处理，将指定目录下的所有文件及子目录一并处理-v&lt;版本编号&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;设置文件或目录版本-V&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;显示指令执行过程+&lt;属性&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;开启文件或目录的该项属性-&lt;属性&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关闭文件或目录的该项属性=&lt;属性&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;指定文件或目录的该项属性 属性含义 a&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;让文件或目录仅供附加用途b&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;不更新文件或目录的最后存取时间c&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;将文件或目录压缩后存放d&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;将文件或目录排除在倾倒操作之外i&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;不得任意更动文件或目录s&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;保密性删除文件或目录S&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;即时更新文件或目录u&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;预防意外删除 示例 使用chattr命令防止系统关键文件AAA被修改 1chattr +i AAA 使用chattr命令使系统关键文件AAA只能添加不能减少，使用于日记文件一类的关键文件 1chattr +a AAA 使用chattr命令使系统关键文件AAA被意外删除 1chattr +u AAA 添加u属性后，即使使用sudo rm指令也无法删除，要删除需要先去除u属性 1chattr -u AAA 权限更改操作使用chmod指令更改文件权限，是十分常用好用的命令，在系统目录下操作可能需要添加sudo前缀提供权限 Linux发行版的文件调用权限分为三级：文件拥有者、群组、其他，可借用chmod控制文件如何被他人调用 1chmod [-cfvR] [--help] [--version] mode file mode：权限设定字符串，参数设定如下 1[ugoa][[+-=][rwxX] 参数含义 u&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;表示该文件的拥有者g&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;表示与该文件的拥有者属于同一个群体(group)者o&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;表示其他以外的人a&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;表示这三者皆是 +&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;表示增加权限-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;表示取消权限=&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;表示唯一设定权限 r&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;表示可读取w&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;表示可写入x&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;表示可执行X&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;表示只有当该文件是个子目录或者该文件已经被设定过为可执行 -c&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;若该文件权限确实已经更改，才显示其更改动作-f&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;若该文件权限无法被更改也不要显示错误讯息-v&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;显示权限变更的详细资料-R&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前目录下的所有文件与子目录进行相同的权限变更(即以递回的方式逐个变更) help&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;显示辅助说明version&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;显示版本 权限更改操作的简单版本在日常使用中，还有一种更简便的方法，在系统目录下操作可能需要添加sudo前缀提供权限 1chmod abc file 其中，a、b、c分别是一个数字，代表User、Group、Others的权限 r(read) = 4，w(write) = 2，x(可执行权限) = 1 若要rwx属性&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;则4+2+1=7若要rw-属性&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;则4+2=6若要r-x属性&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;则4+1=5 以下两条命令效果等价(读+写+可执行) 1chmod a=rwx file 1chmod 777 file 另外，执行以下命令可使此程序具有root的权限 1chmod 4755 filename 显示其他系统信息的命令 文件操作列出文件使用ls命令列出当前文件夹下的可视文件与文件夹1ls [option] 参数含义留空&nbsp;&nbsp;仅列出当前文件夹下的可视文件于文件夹-a &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;显示当前文件夹下所有文件与文件夹，包括隐藏的项目-l &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;显示当前文件夹下所有文件的权限、所有人、修改日期、文件名等信息 ls -l示例： 文件比较使用CMP命令比较两个文件是否完全相同1cmp [-clsv][-i &lt;字符数目&gt;][--help][First][First] 当两个文件完全一样时，终端不会输出信息；当两个文件不相同，则会输出第一个不相同的字符和列数编号 若终端输出1cmp:EOF on First 则说明First与Second前面的部分相同，但Second还含有后面的部分 参数含义 -c&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;除了标明差异处的十进制字码之外，一并显示该字符所对应字符-i&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;指定一个数目-l&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;标示出所有不一样的地方-s&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;不显示错误信息-v&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;显示版本信息 文件复制使用mv命令进行文件复制，在系统目录下操作可能需要添加sudo前缀提供权限1cp [options] source dest 参数含义 -d&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;复制时保留链接。这里所说的链接相当于Windows系统中的快捷方式-f&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;覆盖已经存在的目标文件而不给出提示-i&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;与-f选项相反，在覆盖目标文件之前给出提示，要求用户确认是否覆盖，回答”y”时目标文件将被覆盖-p&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;除复制文件的内容外，还把修改时间和访问权限也复制到新文件中-r&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;若给出的源文件是一个目录文件，此时将复制该目录下所有的子目录和文件-l&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;不复制文件，只是生成链接文件-a&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;此选项通常在复制目录时使用，它保留链接、文件属性，并复制目录下的所有内容。其作用等于dpR参数组合 文件移动使用mv命令进行文件移动，还可进行文件重命名操作，在系统目录下操作可能需要添加sudo前缀提供权限1mv [options] source dest 参数含义 -i&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;若指定目录已有同名文件，则先询问是否覆盖旧文件-f&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在 mv 操作要覆盖某已有的目标文件时不给任何指示 示例： 将文件123重命名为4561mv 123 456 将aaa文件放入bbb目录中1mv aaa bbb 将aaa目录放入bbb目录中，若bbb目录不存在，则该命令将aaa目录重命名为bbb目录1mv aaa/ bbb 文件删除使用rm命令删除文件，在系统目录下操作可能需要添加sudo前缀提供权限 1rm [options] name... 参数含义 -i&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;删除前逐一询问确认-f&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;即使原档案属性设为唯读，亦直接删除，无需逐一确认-r&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;将目录及以下之档案亦逐一删除 警示：使用rm命令删除的文件除了进行数据恢复以外无法恢复，使用这条命令必须格外小心 文件寻找使用find命令用来在指定目录下查找文件。任何位于参数之前的字符串都将被视为欲查找的目录名。如果使用该命令时，不设置任何参数，则find命令将在当前目录下查找子目录与文件。并且将查找到的子目录和文件全部进行显示 1find path [options] [-print] [-exec -ok] 参数含义find命令根据下列规则判断 path 和 expression，在命令列上第一个[-options]之前的部份为 path，之后的是 expression。如果 path 是空字串则使用目前路径，如果 expression 是空字串则使用 -print 为预设 expression expression 中可使用的选项有二三十个之多，在此只介绍最常用的部份 -mount, -xdev&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;只检查和指定目录在同一个文件系统下的文件，避免列出其它文件系统中的文件-amin n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在过去 n 分钟内被读取过-anewer file&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;比文件 file 更晚被读取过的文件-atime [n]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在过去n天内被读取过的文件-cmin [n]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在过去 n 分钟内被修改过-cnewer [file]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;比文件 file 更新的文件-ctime [n]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在过去n天内被修改过的文件-empty&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;空的文件-group [name]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;group ID,名称是 name-ipath [p], -path [p]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;路径名称符合 p 的文件，ipath 会忽略大小写-name [name], -iname [name]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;文件名称符合 name 的文件。iname 会忽略大小写-size [n]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;文件大小 是 n 单位，b 代表 512 位元组的区块，c 表示字元数，k 表示 kilo bytes，w 是二个位元组-type b&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;区块装置文件-type c&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;字符设备文件-type d&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;目录-type f&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;一般文件-type l&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;符号链接文件-type p&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;管道文件-pid [n]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;process id 是 n 的文件 目录操作新建文件夹操作使用mkdir命令新建文件夹，在系统目录下操作可能需要添加sudo前缀提供权限 1mkdir [-p] dirName 参数含义 -p&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;确保目录名称存在，不存在的路径会自动新建 若要创建的目录中包含子目录，则建议使用-p参数 1mkdir -p AAA/BBB/CCC 删除目录同删除文件的命令一样，使用rm命令删除文件夹，在系统目录下操作可能需要添加sudo前缀提供权限 1rm -r AAA/BBB 当前工作目录在终端中，使用pwd命令显示当前工作目录，pwd是print working directory的缩写 1pwd （效果图片） 改变当前目录使用cd命令改变当前工作目录 前进到当前路径下的AAA文件夹中的BBB文件夹 1cd AAA/BBB 返回到当前路径的父目录，..两个点表示父目录，….四个点表示父目录的父目录 1cd .. 返回到上一次所使用的目录 1cd - 复制当前目录使用cp命令复制文件夹，在系统目录下操作可能需要添加sudo前缀提供权限 1cp [options] source dest 参数含义 -r 复制文件夹以及该文件夹下所有子文件夹，也可以直接使用-a参数 移动当前目录使用mv命令移动文件夹，在系统目录下操作可能需要添加sudo前缀提供权限 1mv [options] sourceLocation destLocation -r 复制文件夹以及该文件夹下所有子文件夹，如果源目录和目标目录位置相同，则是文件夹重命名操作","categories":[],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://zhihui.gold/tags/Linux/"},{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://zhihui.gold/tags/Ubuntu/"},{"name":"command","slug":"command","permalink":"https://zhihui.gold/tags/command/"},{"name":"学习","slug":"学习","permalink":"https://zhihui.gold/tags/学习/"}]},{"title":"Ubuntu下使用deepin-wine安装QQ、TIM、微信步骤与注意事项 (2020最全总结)","slug":"deepin-wine-install-TIM-or-Wechat","date":"2020-02-15T04:56:16.000Z","updated":"2020-03-26T12:17:22.024Z","comments":true,"path":"archives/e0be4fc3.html","link":"","permalink":"https://zhihui.gold/archives/e0be4fc3.html","excerpt":"步骤有点复杂，但一定好用","text":"步骤有点复杂，但一定好用 在很久很久很久之前，linux还是个小宝宝的时候，为了与当时的竞争对手（当然了现在也是）Windows竞争市场份额，双方展开了激烈的竞争，linux为了使得自己的系统也能够兼容一部分之前只能运行在Windows上的程序，建立了一个名为Wine的兼容层。 现在的Wine已经能在众多linux发行版上运行大量Windows程序 在Wine的发展过程中，为了兼容众多复杂的Windows特性，不得已加入了大量特性，众所周知，“有代码就有bug”，因此容器化的Wine或多或少存在一些问题。在此处感谢深度团队的付出，他们改进了Wine中的诸多缺陷，发展出了deepin-wine，感谢wszqkzqk同学将这份成果适配到Ubuntu/Debian平台。现在将在Ubuntu平台下使用deepin-wine配置TIM、WeChat以及QQ的过程以及遇到的问题记录为笔记 笔者配置的平台为Ubuntu18.04LTS，使用的Gnome-shell版本为3.28，记录一下供大家参考 安装deepin-winedeepin-wine的安装可以通过源码进行，Github项目地址 将项目Clone到本地或直接下载后再解压1git clone https://github.com/wszqkzqk/deepin-wine-ubuntu.git 国内的网络环境如果没有梯子的话，访问github的速度可能比较慢，可以使用gitee的镜像地址，速度更快1git clone https://gitee.com/wszqkzqk/deepin-wine-for-ubuntu.git 或者直接下载作者打包好的Releases：视网络环境选择Github和Gitee 切换到项目文件目录，对install.sh赋予可执行权限，下面命令中的777是指对User、Group、Other的权限分别为7,代表Read(4)+Write(2)+执行权限(1)1sudo chmod 777 ./install.sh 执行install.sh1./install.sh 执行此步骤后TIM已经能正常安装，Wechat还需进一步设置 安装对应容器安装完deepin-wine后，只是完成了wine环境的搭建，使用应用程序还需要安装对应的容器 对应应用的容器（.deb文件）可以在此处下载： QQ(deepin.com.qq.im_9.1.8deepin0_i386.deb)TIM(deepin.com.qq.office_2.0.0deepin4_i386.deb)微信(deepin.com.wechat_2.6.8.65deepin0_i386.deb) 下载完后切换到下载的文件目录，使用Terminal安装 QQ1sudo dpkg -i deepin.com.qq.im_9.1.8deepin0_i386.deb TIM1sudo dpkg -i deepin.com.qq.office_2.0.0deepin4_i386.deb 微信1sudo dpkg -i deepin.com.wechat_2.6.8.65deepin0_i386.deb 更新deepin-wine到新版本经过上一个步骤后，deepin-wine的版本为2.18-12，此时安装微信会遇到依赖问题 阅读系统给出的提示我们可以得知最新的微信容器需要deepin-wine版本在2.18-19以上，但当前安装的版本为2.18-12，故需要更新版本 deepin-wine目前在阿里云的镜像服务器上能够下载到，不过缺点是阿里云上的分支不会收录旧版本文件，需要根据当时服务器上的文件版本修改命令 原命令在此1234567891011121314151617181920212223242526#!/bin/bashmkdir /tmp/deepintempcd /tmp/deepintempwget http://mirrors.aliyun.com/deepin/pool/non-free/d/deepin-wine/deepin-wine_2.18-22~rc0_all.debwget http://mirrors.aliyun.com/deepin/pool/non-free/d/deepin-wine/deepin-wine32_2.18-22~rc0_i386.debwget http://mirrors.aliyun.com/deepin/pool/non-free/d/deepin-wine/deepin-wine32-preloader_2.18-22~rc0_i386.debwget http://mirrors.aliyun.com/deepin/pool/non-free/d/deepin-wine/deepin-fonts-wine_2.18-22~rc0_all.debwget http://mirrors.aliyun.com/deepin/pool/non-free/d/deepin-wine/deepin-libwine_2.18-22~rc0_i386.debwget http://mirrors.aliyun.com/deepin/pool/non-free/d/deepin-wine-helper/deepin-wine-helper_1.2deepin8_i386.debwget http://mirrors.aliyun.com/deepin/pool/non-free/d/deepin-wine-plugin/deepin-wine-plugin_1.0deepin2_amd64.debwget http://mirrors.aliyun.com/deepin/pool/non-free/d/deepin-wine-plugin-virtual/deepin-wine-plugin-virtual_1.0deepin3_all.debwget http://mirrors.aliyun.com/deepin/pool/non-free/d/deepin-wine-uninstaller/deepin-wine-uninstaller_0.1deepin2_i386.debwget http://mirrors.aliyun.com/deepin/pool/non-free/u/udis86/udis86_1.72-2_i386.debwget https://mirrors.aliyun.com/deepin/pool/main/libj/libjpeg-turbo/libjpeg62-turbo_1.5.1-2_amd64.debwget https://mirrors.aliyun.com/deepin/pool/main/libj/libjpeg-turbo/libjpeg62-turbo_1.5.1-2_i386.debecho &apos;准备添加32位支持&apos;sudo dpkg --add-architecture i386echo &apos;添加成功，准备刷新apt缓存信息...&apos;sudo apt updateecho &apos;即将开始安装...&apos;sudo dpkg -i *.debecho &apos;安装完成，正在自动安装依赖...&apos;sudo apt install -fyrm -vfr /tmp/deepintemp 阿里云经常会更新deepin-wine的版本，若使用上述代码更新时系统返回HTTP 404错误（获取不到对应的程序包），除了检查网络问题以外，还有较大的可能是命令中的程序包版本跟阿里云服务器上的新版本不对应，这时可以自行到阿里云镜像查看当前能用的版本 举个栗子，对于下面的链接1wget http://mirrors.aliyun.com/deepin/pool/non-free/d/deepin-wine/deepin-wine_2.18-22~rc0_all.deb 如果程序包版本不对，返回以下信息1HTTP request sent, awaiting response... 404 Not Found 这时我们需要访问 https://mirrors.aliyun.com/deepin/pool/non-free/d/deepin-wine/ 没错，就是上面我们wget请求过的链接的一部分，浏览器会自动跳转到阿里云镜像服务器的文件列表 我们可以看到我们想要请求的程序包名称 1deepin-wine_2.18-22~rc0_all.deb 当前服务器上的最新程序包版本为2.18-22~rc0_all.deb,此时我们需要将所有HTTP 404错误的程序包更换为统一的新版本，更换之后即可正常更新，更新后微信也可以正常安装了 非中文系统的中文方框问题&amp;中文系统的换字体问题在Ubuntu系统语言不是中文的情况下，deepin-wine的默认语言跟随系统语言设置，导致所有deepin-wine容器的默认字体不支持所有的中文字体，导致部分中文字体出现乱码和方框，我们解决这个问题的思路是通过更换对中文支持好的字体，作者自己是使用微软雅黑替换deepin-wine的默认显示字体 修改deepin-wine的两个文件（作者使用的编辑器是gedit）1sudo gedit /opt/deepinwine/tools/run.sh 1sudo gedit /opt/deepinwine/tools/run_v2.sh 在文件中找到1WINE_CMD=&quot;deepin-wine&quot; 修改成1WINE_CMD=&quot;LC_ALL=zh_CN.UTF-8 deepin-wine&quot; 如果只修改run.sh一个文件，微信有可能还是显示中文方框 （作者就是在这里卡了好久，ひどい！） 百度云下载通用字体（此处使用的是微软雅黑）1链接: https://pan.baidu.com/s/12aj25hOPAf6NzV3Hdyl9Mw 提取码: dikf 切换到存放字体的文件夹，将下载的字体复制到deepin-wechat容器里（TIM和QQ只需将Deepin-Wechat替换为Deepin-TIM和Deepin-QQ即可）1cp msyh.ttc ~/.deepinwine/Deepin-WeChat/drive_c/windows/Fonts 更改该容器的注册表（TIM和QQ只需将Deepin-Wechat替换为Deepin-TIM和Deepin-QQ即可）1gedit ~/.deepinwine/Deepin-WeChat/system.reg 找到以下两行内容12&quot;MS Shell Dlg&quot;=xxx&quot;MS Shell Dlg 2&quot;=xxx 修改为12&quot;MS Shell Dlg&quot;=“msyh”&quot;MS Shell Dlg 2&quot;=“msyh” 在某个位置新建msyh_config.reg注册字体1gedit msyh_config.reg 在文件msyh_config.reg中添加如下内容12345678910REGEDIT4[HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\FontLink\\SystemLink]&quot;Lucida Sans Unicode&quot;=&quot;msyh.ttc&quot;&quot;Microsoft Sans Serif&quot;=&quot;msyh.ttc&quot;&quot;MS Sans Serif&quot;=&quot;msyh.ttc&quot;&quot;Tahoma&quot;=&quot;msyh.ttc&quot;&quot;Tahoma Bold&quot;=&quot;msyhbd.ttc&quot;&quot;msyh&quot;=&quot;msyh.ttc&quot;&quot;Arial&quot;=&quot;msyh.ttc&quot;&quot;Arial Black&quot;=&quot;msyh.ttc&quot; 最后一步，注册该字体（注册字体只需执行一次）1deepin-wine regedit msyh_config.reg","categories":[],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://zhihui.gold/tags/Linux/"},{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://zhihui.gold/tags/Ubuntu/"},{"name":"deepin-wine","slug":"deepin-wine","permalink":"https://zhihui.gold/tags/deepin-wine/"},{"name":"TIM","slug":"TIM","permalink":"https://zhihui.gold/tags/TIM/"},{"name":"Wehcat","slug":"Wehcat","permalink":"https://zhihui.gold/tags/Wehcat/"},{"name":"QQ","slug":"QQ","permalink":"https://zhihui.gold/tags/QQ/"}]},{"title":"更新计划","slug":"000000-update-plan-collect","date":"1970-01-01T00:00:00.000Z","updated":"2020-04-03T16:31:06.733Z","comments":true,"path":"archives/9284d20.html","link":"","permalink":"https://zhihui.gold/archives/9284d20.html","excerpt":"","text":"按目前的节奏，更新暂定是每两周咕咕一篇，周六推送到服务器上，也许可能咕咕咕咕咕(?) 不过我会尽力补上的 2020-05-02&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;游戏推荐：AER Memories of Old 2020-04-18&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;游戏推荐：Ori and the Blind Forest 2020-04-04&nbsp;&nbsp;(传送门)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ubuntu系统备份方式记录 2020-03-21&nbsp;&nbsp;(传送门)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ubuntu系统常用命令总结(二) 2020-03-07&nbsp;&nbsp;(传送门)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ubuntu系统常用命令总结(一) 2020-02-22&nbsp;&nbsp;(传送门)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ubuntu下使用deepin-wine安装QQ、TIM、微信步骤与注意事项","categories":[],"tags":[{"name":"更新","slug":"更新","permalink":"https://zhihui.gold/tags/更新/"}]}]}